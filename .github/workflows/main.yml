name: Main

on:
  #push:
  #  paths-ignore:
  #    - '.gitignore'
  #    - '*.md'
  
  schedule:
    - cron: '0 9 * * *' # run at 9 AM UTC/ 1 AM AKDT

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'Release']
        config:
          - { name: '🍏 macOS Clang', os: macos-latest }
          - { name: '🐧 Linux GCC', os: ubuntu-latest }
          - { name: '🪟 Windows MSVC', os: windows-latest }

    name: 🛠 Build / ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
          

      - name: Install Dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: brew install ccache ninja pkgconf lua

      - name: Install Dependencies (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache ninja-build pkg-config libluajit-5.1-2 libluajit-5.1-dev libluajit-5.1-common luajit

      - name: Install Dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          choco upgrade ccache ninja pkgconfiglite -y

      - name: Setup MSVC (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: '10G'
          key: ${{ matrix.config.os }}-${{ matrix.build_type }}

      - name: Setup Vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'
        
      
      - name: Install vcpkg dependencies
        run: |
          ${{ github.workspace }}/vcpkg/vcpkg install

      - name: Configure
        run: >
          mkdir GDExtension-build

          cmake
          -B GDExtension-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          --install-prefix ${{ github.workspace }}/install-${{ matrix.build_type }}
          .
      
      - name: Copy luajit lib (Windows)
        if: matrix.config.os == 'windows-latest'
        run: Copy-Item "${{ github.workspace }}\lua51.lib" -Destination "${{ github.workspace }}\GDExtension-build\lua51.lib"


      - name: Build
        run: cmake --build GDExtension-build

      - name: Install
        run: cmake --install GDExtension-build

      - name: Upload artifact (Debug)
        if: matrix.build_type == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.config.os }}-Debug
          path: |
            ${{ github.workspace }}/install-${{ matrix.build_type }}/*

      - name: Upload artifact (Release)
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.config.os }}-Release
          path: |
            ${{ github.workspace }}/install-${{ matrix.build_type }}/*
